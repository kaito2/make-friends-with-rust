```console
$ sample 
? 2
The one-person framework for Rust

Usage: sample [OPTIONS] <COMMAND>

Commands:
  start     Start an app
  db        Perform DB operations
  routes    Describe all application endpoints
  task      Run a custom task
  generate  code generation creates a set of files and code templates based on a predefined set of rules
  help      Print this message or the help of the given subcommand(s)

Options:
  -e, --environment <ENVIRONMENT>  Specify the environment [default: development]
  -h, --help                       Print help
  -V, --version                    Print version

```

```console 
$ sample db
? 2
Perform DB operations

Usage: sample db [OPTIONS] <COMMAND>

Commands:
  migrate   Migrate schema (up)
  reset     Drop all tables, then reapply all migrations
  status    Migration status
  entities  Generate entity .rs files from database schema
  truncate  Truncate data in tables (without dropping)
  help      Print this message or the help of the given subcommand(s)

Options:
  -e, --environment <ENVIRONMENT>  Specify the environment [default: development]
  -h, --help                       Print help
  -V, --version                    Print version

```

```console
$ sample generate
? 2
code generation creates a set of files and code templates based on a predefined set of rules

Usage: sample generate [OPTIONS] <COMMAND>

Commands:
  model       Generates a new model file for defining the data structure of your application, and test file logic
  scaffold    Generates a CRUD scaffold, model and controller
  controller  Generate a new controller with the given controller name, and test file
  task        Generate a Task based on the given name
  worker      Generate worker
  mailer      Generate mailer
  help        Print this message or the help of the given subcommand(s)

Options:
  -e, --environment <ENVIRONMENT>  Specify the environment [default: development]
  -h, --help                       Print help
  -V, --version                    Print version

```

```console 
$ sample task
seed_data		[Task for seeding data]

```

```console
$ sample routes
[GET] /_health
[GET] /_ping
[POST] /auth/forgot
[POST] /auth/login
[POST] /auth/register
[POST] /auth/reset
[POST] /auth/verify
[GET] /notes
[POST] /notes
[GET] /notes/:id
[DELETE] /notes/:id
[POST] /notes/:id
[GET] /user/current

```